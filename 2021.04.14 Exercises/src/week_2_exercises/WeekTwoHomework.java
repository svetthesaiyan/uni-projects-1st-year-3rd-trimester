package week_2_exercises;

import java.util.Scanner;

public class WeekTwoHomework 
{
	public static void main(String[] args) 
	{
		Scanner scanner = new Scanner(System.in);
		// –¥–µ–∫–ª–∞—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏, —Å –∫–æ–∏—Ç–æ —â–µ —Ä–∞–∑–ø—Ä–µ–¥–µ–ª–∏–º –≥–ª–∞—Å—É–≤–∞—â–∏—Ç–µ —Å–ø—Ä—è–º–æ –ï–ì–ù-—Ç–∞—Ç–∞ –∏–º
		final int poorBorder=99;	
		final int normalBorder=100_000;
		final int richBorder=999_999;
		
		// –≤—ä–≤–µ–∂–¥–∞–Ω–µ –Ω–∞ –ï–ì–ù –∏ –¥–µ–∫–ª–∞—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –±—É–ª–µ–≤–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
		System.out.print("–ó–¥—Ä–∞–≤–µ–π—Ç–µ, –¥—Ä–∞–≥–∏ —Å—ä–≥—Ä–∞–∂–¥–∞–Ω–∏! –î–Ω–µ—Å —â–µ –º–æ–∂–µ—Ç–µ –¥–∞ –≥–ª–∞—Å—É–≤–∞—Ç–µ –∑–∞ –ø–æ—Ä–µ–¥–µ–Ω –ø—ä—Ç –∑–∞ –Ω–∞—à–∞—Ç–∞ –ø–∞—Ä—Ç-, —ä—ä—ä, –∑–∞ –±—ä–¥–µ—â–µ—Ç–æ –Ω–∞ –≤–µ–ª–∏–∫–∞—Ç–∞ –Ω–∏ –¥—ä—Ä–∂–∞–≤–∞ –ó–∞–º—É–Ω–¥–∞. –ó–∞ –¥–∞ –ø—Ä–µ—Ü–µ–Ω–∏–º –∫–æ–∏ –≤–æ—Ç–æ–≤–µ –¥–∞ —Å–∏ –ø—Ä–∏—Å–≤–æ-, *cough* ...–ó–∞ –¥–∞ *–æ—Å–∏–≥—É—Ä–∏–º* —á–µ—Å—Ç–Ω–∏ –∏–∑–±–æ—Ä–∏, —â–µ –í–∏ –ø–æ–º–æ–ª–∏–º –¥–∞ —Å–∏ –≤—ä–≤–µ–¥–µ—Ç–µ –≥–æ–¥–∏—à–Ω–∏—è –¥–æ—Ö–æ-, –∏–º–∞–º –≤ –ø—Ä–µ–¥–≤–∏–¥ –ï–ì–ù-—Ç–∞—Ç–∞ –ø—Ä–µ–¥–∏ –¥–∞ –≥–ª–∞—Å—É–≤–∞—Ç–µ."+"\n"+"–ú–æ–∂–µ –¥–∞ –≤—ä–≤–µ–¥–µ—Ç–µ –í–∞—à–µ—Ç–æ –ï–ì–ù —Ç—É–∫: " );
		int id=Integer.parseInt(scanner.nextLine());
		boolean isCitizenOfTypePoor=id>poorBorder && id<normalBorder;
		boolean isCitizenOfTypeNormal=id>=normalBorder && id <=richBorder;
		boolean isCitizenOfTypeRich=id>richBorder && isCitizenOfTypePoor==false && isCitizenOfTypeNormal==false;
		
		// –∏–∑—Ö–æ–¥ —Å–ø—Ä—è–º–æ –≤—ä–≤–µ–¥–µ–Ω–æ—Ç–æ –ï–ì–ù –∏ –Ω–∞–ª–æ–∂–µ–Ω–∏—Ç–µ –º—É –±—É–ª–µ–≤–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
		String citizenType=isCitizenOfTypePoor ? "–•–∞–π–¥–µ –ø–æ-–±—ä—Ä–∑–æ –∏ –¥–∞ —Ç–µ –Ω—è–º–∞."
				: isCitizenOfTypeNormal ? "–†–∞–¥–≤–∞–º–µ —Å–µ, —á–µ –Ω–æ—Ä–º–∞–ª–Ω–∏ —Ö–æ—Ä–∞ –≤–µ—á–µ –≥–ª–∞—Å—É–≤–∞—Ç."
						: isCitizenOfTypeRich ? "–ò–º–∞ –∑–∞ –Ω–∞—Å, –∏–º–∞ –∏ –∑–∞ –≤–∞—Å."
								: "–ö–æ–π –∑–∞ –ë–æ–≥–∞ –ø—ä–∫ —Å—Ç–µ –í–∏–µ?";
		System.out.println(citizenType);
		System.out.println();
		
		// –∏–∑–±—Ä–æ—è–≤–∞–Ω–µ –Ω–∞ –∏–∑–±–∏—Ä–∞–µ–º–∏—Ç–µ –ø–∞—Ä—Ç–∏–∏ –∏ –∏–∑–±–æ—Ä
		System.out.println("–°–µ–≥–∞ –ø—Ä–µ–¥—Å—Ç–æ–∏ –Ω–∞–π-–∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—Ç–∞ —á–∞—Å—Ç, –∞ –∏–º–µ–Ω–Ω–æ –¥–∞ –≤–∏–¥–∏–º –æ—Ç —á–∏—è –ø–∞—Ä—Ç–∏—è —â–µ –æ—Ç–∫—Ä–∞–¥–Ω-, *cough* ... –∑–∞ –∫–æ—è –ø–∞—Ä—Ç–∏—è —â–µ –≥–ª–∞—Å—É–≤–∞—Ç–µ."+"\n"+"–ú–æ–∂–µ –¥–∞ –¥–∞ –¥–∞–¥–µ—Ç–µ –í–∞—à–∏—è –≤–æ—Ç –∑–∞ –µ–¥–Ω–∞ –æ—Ç —Å–ª–µ–¥–Ω–∏—Ç–µ –ø–∞—Ä—Ç–∏–∏: ");
		System.out.println("–ù–æ–º–µ—Ä –Ω–∞ –ø–∞—Ä—Ç–∏—è (1)   - \"–ü–∞—Ä—Ç–∏—è –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å–∏–≤–µ–Ω –∫–∞–Ω–∏–±–∞–ª–∏–∑—ä–º\"");
		System.out.println("–ù–æ–º–µ—Ä –Ω–∞ –ø–∞—Ä—Ç–∏—è (27)  - \"–ó–∞–º—É–Ω–¥—Å–∫–∞ –≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∞ –ø–∞—Ä—Ç–∏—è\"");
		System.out.println("–ù–æ–º–µ—Ä –Ω–∞ –ø–∞—Ä—Ç–∏—è (666) - \"–°–∏–Ω–¥–∏–∫–∞—Ç –Ω–∞ –≤—É–¥—É-—Ç—Ä–∞–∫—Ç–æ—Ä–∏—Å—Ç–∏—Ç–µ\"");
		System.out.println("–ù–æ–º–µ—Ä –Ω–∞ –ø–∞—Ä—Ç–∏—è (999) - \"–ü–∞—Ä—Ç–∏—è –Ω–∞ —Ç—Ä—É–¥–∞, –º–æ—Ç–∏–∫–∞—Ç–∞ –∏ –Ω–∞–∫–æ–≤–∞–ª–Ω—è—Ç–∞\"");
		
		System.out.print("–¢–∞, –∑–∞ –∫–æ—è –ø–∞—Ä—Ç–∏—è —â–µ –≥–ª–∞—Å—É–≤–∞—Ç–µ? –í—ä–≤–µ–¥–µ—Ç–µ –ø–∞—Ä—Ç–∏–π–Ω–∏—è —ù –Ω–æ–º–µ—Ä —Ç—É–∫: ");
		int partyNumberInput=Integer.parseInt(scanner.nextLine());
		String partyNumberName=partyNumberInput==1 ? "–ü–∞—Ä—Ç–∏—è –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å–∏–≤–µ–Ω –∫–∞–Ω–∏–±–∞–ª–∏–∑—ä–º"
				: partyNumberInput==27 ? "–ó–∞–º—É–Ω–¥—Å–∫–∞ –≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∞ –ø–∞—Ä—Ç–∏—è"
						: partyNumberInput==666 ? "–°–∏–Ω–¥–∏–∫–∞—Ç –Ω–∞ –≤—É–¥—É-—Ç—Ä–∞–∫—Ç–æ—Ä–∏—Å—Ç–∏—Ç–µ"
								: partyNumberInput==999 ? "–ü–∞—Ä—Ç–∏—è –Ω–∞ —Ç—Ä—É–¥–∞, –º–æ—Ç–∏–∫–∞—Ç–∞ –∏ –Ω–∞–∫–æ–≤–∞–ª–Ω—è—Ç–∞"
										: "–Ω–∏–∫–æ–≥–æ, –∑–∞—â–æ—Ç–æ –Ω–µ –º–æ–∂–µ—Ç–µ –¥–∞ –∑–∞–ø–æ–º–Ω–∏—Ç–µ 4 —á–∏—Å–ª–∞. –ë–∞—Å–∏ –º–∞–ª–æ—É–º–Ω–∏–∫–∞... ü§¶üèª‚Äç‚ôÇÔ∏è";
		System.out.println("–í–∏–µ —Å–∏ –ø–æ—Ä—ä—á–∞—Ö—Ç–µ –¥–∞ –í–∏ —É–ø—Ä–∞–≤–ª—è–≤–∞: "+partyNumberName);
		System.out.println();
		
		// –¥–µ–∫–ª–∞—Ä–∏—Ä–∞–Ω–µ –Ω–∞ —É—Å–ª–æ–≤–∏–µ –∑–∞ –í–ò–ü –≥–ª–∞—Å—É–≤–∞—â
		boolean isCitizenVip=(id%10)%2==0;
		// –¥–µ–∫–ª–∞—Ä–∏—Ä–∞–Ω–µ –Ω–∞ —É—Å–ª–æ–≤–∏–µ –∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ —É–∫—Ä–∏—Ç–∏ –¥–∞–Ω—ä—Ü–∏
		boolean isCitizenPossibleTaxEvader=(id%100)/10>3;
		
		// –¥–µ–∫–ª–∞—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –≥–ª–∞–≤–Ω–∞ —É—Å–ª–æ–≤–Ω–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ —É–∫—Ä–∏—Ç–∏ –¥–∞–Ω—ä—Ü–∏
		if(isCitizenPossibleTaxEvader==true)
		{
		System.out.print("–°–µ–≥–∞ —â–µ –í–∏ –ø–æ–º–æ–ª–∏–º –¥–∞ –±—ä–¥–µ—Ç–µ —á–µ—Å—Ç–Ω–∏ —Å –Ω–∞—Å. –£–∫—Ä–∏–≤–∞—Ç–µ –ª–∏ –¥–∞–Ω—ä—Ü–∏? "+"\n"+"–û—Ç–≥–æ–≤–æ—Ä–µ—Ç–µ —Å \"–¥–∞\" –∏–ª–∏ \"–Ω–µ\": ");
		String taxEvaderConfession=scanner.nextLine();
		String taxEvaderConfessionType=taxEvaderConfession.equalsIgnoreCase("–¥–∞") ? "–ë—Ä–∞–≤–æ, –º–æ–µ—Ç–æ –º–æ–º—á–µ/–º–æ–º–∏—á–µ."
				: taxEvaderConfession.equalsIgnoreCase("–Ω–µ") ? "–ë—É–¥–∞–ª–∞."
						: "–ó–Ω–∞—á–∏, –∏–ª–∏ –≤—ä–≤–µ–¥–æ—Ö—Ç–µ –æ—Ç–≥–æ–≤–æ—Ä–∞ —Å–∏ –Ω–∞ –µ–∑–∏–∫, —Ä–∞–∑–ª–∏—á–µ–Ω –æ—Ç –±—ä–ª–≥–∞—Ä—Å–∫–∏, –∏–ª–∏ —Å–µ –æ–ø–∏—Ç–≤–∞—Ç–µ –¥–∞ —Å–º–µ–Ω–∏—Ç–µ —Ç–µ–º–∞—Ç–∞. –ö–∞–∫–≤–æ—Ç–æ –∏ –¥–∞ –ø—Ä–∞–≤–∏—Ç–µ, –Ω—è–º–∞ –¥–∞ –í–∏ –º–∏–Ω–µ –Ω–æ–º–µ—Ä—ä—Ç, –≥–æ—Å–ø–æ–¥–∏–Ω–µ!";
		System.out.println(taxEvaderConfessionType);
		System.out.println();
		
		boolean isCitizenSuperVip=isCitizenVip && taxEvaderConfession.equalsIgnoreCase("–Ω–µ");
			
			// –¥–µ–∫–ª–∞—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω–∞ —É—Å–ª–æ–≤–Ω–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∑–∞ –∂–µ–ª–∞–Ω–∏–µ –∑–∞ –±–∞–Ω–∏—Ü–∞
			if(isCitizenSuperVip==true)
			{
				System.out.print("–í–∏–∂–¥–∞–º–µ, —á–µ —Å—Ç–µ –ø–æ—á—Ç–µ–Ω –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω, –±—Ä–∞–≤–æ. –ñ–µ–ª–∞–µ—Ç–µ –ª–∏ –±–µ–∑–ø–ª–∞—Ç–Ω–∞ –±–∞–Ω–∏—á–∫–∞ –∫–∞—Ç–æ –Ω–∞–≥—Ä–∞–¥–∞? "+"\n"+"–û—Ç–≥–æ–≤–æ—Ä–µ—Ç–µ —Å \"–¥–∞\" –∏–ª–∏ \"–Ω–µ\": ");
				String CitizenBanichkaRequest=scanner.nextLine();	// –Ω–∞–≥–ª–µ–¥ –ø–æ–ª–∑–≤–∞–º PascalCase —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞ –∑–∞ –∏–º–µ–Ω—É–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∏ —Ç—É–∫, –Ω–æ —Ç—ä–π –∫–∞—Ç–æ –ø—Ä–∏ –≤—Å–∏—á–∫–∏ –æ—Å—Ç–∞–Ω–∞–ª–∏ –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∏, –≤–∫–ª—é—á–≤–∞—â–∏ –¥—É–º–∏—á–∫–∞—Ç–∞ "Citizen", —Ç—è –µ –Ω–∞–ø–∏—Å–∞–Ω–∞ —Å –≥–ª–∞–≤–Ω–∞, —Ä–µ—à–∏—Ö –∏ —Ç–∞–∑–∏ –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∞ —Ç–∞–∫–∞ –¥–∞ —è –∏–º–µ–Ω—É–≤–∞–º. –î–∞–Ω–æ –Ω–µ –º–∏ –∞–Ω—É–ª–∏—Ä–∞—Ç–µ –¥–æ–º–∞—à–Ω–æ—Ç–æ –∑–∞ —Ç–æ–≤–∞. ‚òπ
				String CitizenBanichkaRequestType=CitizenBanichkaRequest.equalsIgnoreCase("–¥–∞") ? "–ù–µ –º–æ–∂–µ."
						: CitizenBanichkaRequest.equalsIgnoreCase("–Ω–µ") ? "–ê–º–∏, —Ç–æ –∏ –±–µ–∑ —Ç–æ–≤–∞ –Ω—è–º–∞."
								: "–ü–∞–∫ —Å–µ –æ–ø–∏—Ç–≤–∞—Ç–µ –¥–∞ —Ö–∏—Ç—Ä—É–≤–∞—Ç–µ, –∞?";
				System.out.println(CitizenBanichkaRequestType);
				System.out.println();
				
				// –¥–µ–∫–ª–∞—Ä–∏—Ä–∞–Ω–µ –Ω–∞ —Ç—Ä–µ—Ç–æ—Å—Ç–µ–ø–µ–Ω–Ω–∞ —É—Å–ª–æ–≤–Ω–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∑–∞ –Ω–∞–ø–æ–º–Ω—è–Ω–µ –Ω–∞ –¥–∞–¥–µ–Ω–∏—è –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω, —á–µ –∞–∫–æ –ø–æ–ª–æ–∂–µ–Ω–∏–µ—Ç–æ –µ –∑–ª–µ, —Ç–æ –≤–∏–Ω–∞–≥–∏ –º–æ–∂–µ –¥–∞ —Å—Ç–∞–Ω–∞ –æ—â–µ –ø–æ-–∑–ª–µ. üòå
				if(CitizenBanichkaRequest.equalsIgnoreCase("–Ω–µ") && isCitizenOfTypeNormal==true && partyNumberInput==27)
				{
					System.out.println("–ñ–∏–≤–æ—Ç—ä—Ç –µ –∂–µ—Å—Ç–æ–∫ –ø–æ–Ω—è–∫–æ–≥–∞ –∏, –∑–∞ —Å—ä–∂–∞–ª–µ–Ω–∏–µ, —Ç—Ä—è–±–≤–∞ –¥–∞ –í–∏ –∏–Ω—Ñ–æ—Ä–º–∏—Ä–∞–º–µ, —á–µ –Ω–∏ –¥—ä–ª–∂–∏—Ç–µ –¥–∞–Ω—ä–∫ –æ—Ç –µ–¥–∏–Ω –±–∞–Ω–∞–Ω. –î–∞–π—Ç–µ –±–∞–Ω–∞–Ω–∞ –∏–ª–∏ –Ω–∞—Å–∏–ª—Å—Ç–≤–µ–Ω–æ —â–µ –í–∏ –≤–∑–µ–º–µ–º –ø—Ä–µ–ø—É—Ü–∏—É–º–∞. üçÜ‚úÇ");
					System.out.println();
				}
			}
		}
		// –∫—Ä–∞–π –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞—Ç–∞ —Å –ø–æ–∑–¥—Ä–∞–≤, –∫–æ–π—Ç–æ –Ω–µ–ø—Ä–µ–º–µ–Ω–Ω–æ —Ç—Ä—è–±–≤–∞ –¥–∞ —Å–∏ –ø—É—Å–Ω–µ—Ç–µ, –∞–∫–æ —Å–µ —Å—á–∏—Ç–∞—Ç–µ –∑–∞ –∫–∞–¥—ä—Ä–µ–Ω –ø—Ä–æ–≥—Ä–∞–º–∏—Å—Ç
		System.out.println("–ù–∞–¥—è–≤–∞–º–µ —Å–µ –∫—Ä–∞–π–∫–æ–∂–∏–µ—Ç–æ –í–∏ –¥–∞ –µ –Ω–µ–ø–æ–∫—ä—Ç–Ω–∞—Ç–æ, –Ω–æ –¥–æ—Ä–∏ –∏ –¥–∞ —Å–º–µ –í–∏ –≥–æ –∫–æ–Ω—Ñ–∏—Å–∫—É–≤–∞–ª–∏, –Ω–∞–¥—è–≤–∞–º–µ —Å–µ —Å —Ç–æ–∑–∏ –ø–æ–∑–¥—Ä–∞–≤ –¥–∞ –í–∏ –æ–ø—Ä–∞–≤–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ—Ç–æ: https://www.youtube.com/watch?v=dQw4w9WgXcQ");
	}
}
